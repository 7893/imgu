# /.github/workflows/deploy-sync-lambda.yml (Using esbuild)
name: Deploy Sync Lambda to AWS (OIDC)
on:
  push:
    branches: [main]
    paths: ['sync-lambda/**', '.github/workflows/deploy-sync-lambda.yml']
  workflow_dispatch:
jobs:
  deploy:
    name: Build and Deploy Sync Lambda
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults: # 设置默认工作目录为 sync-lambda
        run:
          working-directory: ./sync-lambda
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: sync-lambda/package-lock.json # 注意路径

      - name: Install Dependencies
        run: npm ci # 在 sync-lambda 目录下运行

      - name: Build with esbuild
        run: npm run build # 在 sync-lambda 目录下运行 build 脚本

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::015590450538:role/My_LambdaImageProcessorRole_20250329
          role-session-name: GitHubActionsSyncLambdaDeploy-${{ github.run_id }}
          aws-region: us-west-2
        # 不需要再设置 working-directory，此 Action 在根目录运行

      - name: Create deployment package
        run: |
          echo "Zipping contents of sync-lambda/dist..."
          # 在仓库根目录操作，只打包 dist 下的内容到 zip 根目录
          cd sync-lambda/dist && zip -r ../../sync-lambda-deployment.zip .
        working-directory: ./ # 运行在仓库根目录

      - name: Deploy to AWS Lambda
        run: |
          echo "Deploying sync-lambda function code..."
          aws lambda update-function-code \
            --function-name images_20250329 \
            --zip-file fileb://sync-lambda-deployment.zip \ # zip 包在根目录
            --region us-west-2 \
            --publish
        working-directory: ./ # 运行在仓库根目录
